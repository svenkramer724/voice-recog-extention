Creating a Chrome extension that performs audio recognitionusing Fast Fourier Transform(FFT) entirely locally without relying on the cloud is indeed possible. Here's high-level overview of the steps involved:
1. Record audio: Use the Chrome Web API, such as getUserMedia, to capture the audio from the user's device.
1. Apply FFT: User a JavaScript library like dsp.js or p5.js to apply the FFT algorithm to the recorded audio. This will convert the audio from the time domain to the frequency domain.
3. Create audio signatures: Generate audio signatures or hashes for specific sounds you want to detect. You can create hashes by selecting specific frequency components from the FFT results and representing them as unique identifiers.
4. Compare signatures: Continuously perform FFT on the captured audio and compare the generated signatures from step 3 to determine if there is a match. You can use algorithms like cross-correlation to calculate the similarity between two signatures.
5. Display confidence level: If a match is found, calculate the confidence level based on the similarity score or any other relevant metric. Then, display this confidence level in the Chrome extension, such as on the extension's icon, in a popup, or any desired user interface element.
Regarding the specific sound you mentioned, "dog barking," you can use the provided audio file to generate the audio signature for testing and verifying the extension's detection capabilities.
Keep in mind that implementing audio recognition solely on the client-side without cloud support can be challenging, as local processing may have limitations when dealing with real-time audio analysis. You will need to fine-turn the parameters and thresholds based on your requirements and experiment with different audio samples to improve the accuracy and reliability of the detection.
I hope this provides a general roadmap for creating the desired Chrome extention. If you have any specific questions or need further assistance, please let me know!


클라우드에 의존하지 않고 완전히 로컬에서 FFT(고속 푸리에 변환)를 사용하여 오디오 인식을 수행하는 Chrome 확장 프로그램을 만드는 것은 실제로 가능합니다. 관련된 단계에 대한 대략적인 개요는 다음과 같습니다.
1. 오디오 녹음: getUserMedia와 같은 Chrome 웹 API를 사용하여 사용자 장치에서 오디오를 캡처합니다.
1. FFT 적용: dsp.js 또는 p5.js와 같은 JavaScript 라이브러리를 사용하여 녹음된 오디오에 FFT 알고리즘을 적용합니다. 그러면 오디오가 시간 도메인에서 주파수 도메인으로 변환됩니다.
3. 오디오 서명 생성: 감지하려는 특정 사운드에 대한 오디오 서명 또는 해시를 생성합니다. FFT 결과에서 특정 주파수 구성 요소를 선택하고 이를 고유 식별자로 표시하여 해시를 생성할 수 있습니다.
4. 서명 비교: 캡처된 오디오에 대해 FFT를 계속 수행하고 3단계에서 생성된 서명을 비교하여 일치하는지 확인합니다. 교차 상관과 같은 알고리즘을 사용하여 두 서명 간의 유사성을 계산할 수 있습니다.
5. 신뢰 수준 표시: 일치 항목이 발견되면 유사성 점수 또는 기타 관련 메트릭을 기반으로 신뢰 수준을 계산합니다. 그런 다음 확장 프로그램 아이콘, 팝업 또는 원하는 사용자 인터페이스 요소와 같은 Chrome 확장 프로그램에 이 신뢰 수준을 표시합니다.
말씀하신 특정 소리인 "개 짖는 소리"와 관련하여 제공된 오디오 파일을 사용하여 확장 프로그램의 감지 기능을 테스트하고 확인하기 위한 오디오 서명을 생성할 수 있습니다.
실시간 오디오 분석을 처리할 때 로컬 처리에 제한이 있을 수 있으므로 클라우드 지원 없이 클라이언트 측에서만 오디오 인식을 구현하는 것은 어려울 수 있습니다. 요구 사항에 따라 매개 변수와 임계값을 미세 조정하고 다양한 오디오 샘플을 실험하여 탐지의 정확도와 신뢰성을 개선해야 합니다.
이것이 원하는 Chrome 확장 프로그램을 만들기 위한 일반적인 로드맵을 제공하기를 바랍니다. 특정 질문이 있거나 추가 지원이 필요한 경우 알려주세요!